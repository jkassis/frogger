# we have to use amd64 platform/arch because not all package are available for arm
FROM --platform=linux/amd64 ubuntu:jammy
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    rm -rf /var/lib/apt/lists/*
RUN apt-add-repository 'deb http://ports.ubuntu.com jammy devel'

# Install compilers and dev tools
RUN \
  apt-get update -y && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y                                      \
    automake autogen build-essential ca-certificates                                     \
    gcc-9-arm-linux-gnueabi g++-9-arm-linux-gnueabi libc6-dev-armel-cross                \
    gcc-9-arm-linux-gnueabihf g++-9-arm-linux-gnueabihf libc6-dev-armhf-cross            \
    gcc-9-aarch64-linux-gnu g++-9-aarch64-linux-gnu libc6-dev-arm64-cross                \
    gcc-9-mips-linux-gnu g++-9-mips-linux-gnu libc6-dev-mips-cross                       \
    gcc-9-mipsel-linux-gnu g++-9-mipsel-linux-gnu libc6-dev-mipsel-cross                 \
    gcc-9-mips64-linux-gnuabi64 g++-9-mips64-linux-gnuabi64 libc6-dev-mips64-cross       \
    gcc-9-mips64el-linux-gnuabi64 g++-9-mips64el-linux-gnuabi64 libc6-dev-mips64el-cross \
    gcc-9-multilib g++-9-multilib gcc-mingw-w64 g++-mingw-w64 clang llvm-dev             \
    libtool libxml2-dev uuid-dev libssl-dev swig openjdk-8-jdk pkg-config patch          \
    make xz-utils cpio wget zip unzip p7zip git mercurial bzr texinfo help2man cmake     \
    zlib1g-dev                                                                           \
    --no-install-recommends

# Fix any stock package issues
RUN ln -s /usr/include/asm-generic /usr/include/asm


##########################
# Darwin Toolchain build #
##########################
WORKDIR /opt
ENV OSX_SDK_VER 11.3
ENV OSX_SDK MacOSX${OSX_SDK_VER}.sdk
#ENV OSX_SDK_PATH https://github.com/phracker/MacOSX-SDKs/releases/download/${OSX_SDK_VER}/$OSX_SDK.tar.xz
ENV OSX_SDK_PATH https://s3.veand.co/go-sdl2/MacOSX11.3.sdk.tar.xz
ENV LD_LIBRARY_PATH=/osxcross/target/lib
RUN ls
RUN git clone https://github.com/tpoechtrager/osxcross
RUN ls -l
WORKDIR /opt/osxcross/tarballs
RUN apt-get install -y curl
RUN curl -O $OSX_SDK_PATH
WORKDIR /opt/osxcross
RUN SDK_VERSION=11.3 UNATTENDED=1 ./build.sh



##########################
# Use bash               #
##########################
SHELL ["/bin/bash", "-c"]



##########################
# GoLang Toolchain build #
##########################
WORKDIR /opt
RUN curl -L -O https://go.dev/dl/go1.20.linux-amd64.tar.gz
RUN tar xzf go1.20.linux-amd64.tar.gz

# App libraries
RUN apt-get install -y --no-install-recommends libsdl2-2.0-0 libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev pulseaudio

# App build script.sh
WORKDIR /opt/app
COPY ./build.sh /opt/app/build.sh
RUN chmod 777 /opt/app/build.sh
ENTRYPOINT ["/bin/bash", "/opt/app/build.sh"]

